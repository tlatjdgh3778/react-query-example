{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nimport { ClassRegistry } from './class-registry';\nimport { Registry } from './registry';\nimport { CustomTransformerRegistry } from './custom-transformer-registry';\nimport { walker, applyReferentialEqualityAnnotations, applyValueAnnotations, generateReferentialEqualityAnnotations } from './plainer';\nimport { copy } from 'copy-anything';\nvar SuperJSON = /** @class */function () {\n  function SuperJSON() {\n    this.classRegistry = new ClassRegistry();\n    this.symbolRegistry = new Registry(function (s) {\n      var _a;\n      return (_a = s.description) !== null && _a !== void 0 ? _a : '';\n    });\n    this.customTransformerRegistry = new CustomTransformerRegistry();\n    this.allowedErrorProps = [];\n  }\n  SuperJSON.prototype.serialize = function (object) {\n    var identities = new Map();\n    var output = walker(object, identities, this);\n    var res = {\n      json: output.transformedValue\n    };\n    if (output.annotations) {\n      res.meta = __assign(__assign({}, res.meta), {\n        values: output.annotations\n      });\n    }\n    var equalityAnnotations = generateReferentialEqualityAnnotations(identities);\n    if (equalityAnnotations) {\n      res.meta = __assign(__assign({}, res.meta), {\n        referentialEqualities: equalityAnnotations\n      });\n    }\n    return res;\n  };\n  SuperJSON.prototype.deserialize = function (payload) {\n    var json = payload.json,\n      meta = payload.meta;\n    var result = copy(json);\n    if (meta === null || meta === void 0 ? void 0 : meta.values) {\n      result = applyValueAnnotations(result, meta.values, this);\n    }\n    if (meta === null || meta === void 0 ? void 0 : meta.referentialEqualities) {\n      result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n    }\n    return result;\n  };\n  SuperJSON.prototype.stringify = function (object) {\n    return JSON.stringify(this.serialize(object));\n  };\n  SuperJSON.prototype.parse = function (string) {\n    return this.deserialize(JSON.parse(string));\n  };\n  SuperJSON.prototype.registerClass = function (v, options) {\n    this.classRegistry.register(v, options);\n  };\n  SuperJSON.prototype.registerSymbol = function (v, identifier) {\n    this.symbolRegistry.register(v, identifier);\n  };\n  SuperJSON.prototype.registerCustom = function (transformer, name) {\n    this.customTransformerRegistry.register(__assign({\n      name: name\n    }, transformer));\n  };\n  SuperJSON.prototype.allowErrorProps = function () {\n    var _a;\n    var props = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      props[_i] = arguments[_i];\n    }\n    (_a = this.allowedErrorProps).push.apply(_a, __spreadArray([], __read(props)));\n  };\n  SuperJSON.defaultInstance = new SuperJSON();\n  SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\n  SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\n  SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\n  SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\n  SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\n  SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\n  SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\n  SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\n  return SuperJSON;\n}();\nexport default SuperJSON;\nexport var serialize = SuperJSON.serialize;\nexport var deserialize = SuperJSON.deserialize;\nexport var stringify = SuperJSON.stringify;\nexport var parse = SuperJSON.parse;\nexport var registerClass = SuperJSON.registerClass;\nexport var registerCustom = SuperJSON.registerCustom;\nexport var registerSymbol = SuperJSON.registerSymbol;\nexport var allowErrorProps = SuperJSON.allowErrorProps;","map":{"version":3,"mappings":"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","names":["ClassRegistry","Registry","CustomTransformerRegistry","walker","applyReferentialEqualityAnnotations","applyValueAnnotations","generateReferentialEqualityAnnotations","copy","description","SuperJSON","object","identities","Map","output","res","json","transformedValue","annotations","meta","values","equalityAnnotations","referentialEqualities","payload","result","JSON","stringify","serialize","string","deserialize","parse","v","options","classRegistry","register","identifier","symbolRegistry","transformer","name","customTransformerRegistry","_i","props","allowedErrorProps","push","defaultInstance","bind","registerClass","registerSymbol","registerCustom","allowErrorProps"],"sources":["C:\\Users\\tjdgh\\Desktop\\study\\react-query\\react-query-example\\base-infinite-swapi\\node_modules\\superjson\\src\\index.ts"],"sourcesContent":["import { SuperJSONResult, SuperJSONValue, Class, JSONValue } from './types';\nimport { ClassRegistry, RegisterOptions } from './class-registry';\nimport { Registry } from './registry';\nimport {\n  CustomTransfomer,\n  CustomTransformerRegistry,\n} from './custom-transformer-registry';\nimport {\n  walker,\n  applyReferentialEqualityAnnotations,\n  applyValueAnnotations,\n  generateReferentialEqualityAnnotations,\n} from './plainer';\nimport { copy } from 'copy-anything';\n\nexport default class SuperJSON {\n  serialize(object: SuperJSONValue): SuperJSONResult {\n    const identities = new Map<any, any[][]>();\n    const output = walker(object, identities, this);\n    const res: SuperJSONResult = {\n      json: output.transformedValue,\n    };\n\n    if (output.annotations) {\n      res.meta = {\n        ...res.meta,\n        values: output.annotations,\n      };\n    }\n\n    const equalityAnnotations = generateReferentialEqualityAnnotations(\n      identities\n    );\n    if (equalityAnnotations) {\n      res.meta = {\n        ...res.meta,\n        referentialEqualities: equalityAnnotations,\n      };\n    }\n\n    return res;\n  }\n\n  deserialize<T = unknown>(payload: SuperJSONResult): T {\n    const { json, meta } = payload;\n\n    let result: T = copy(json) as any;\n\n    if (meta?.values) {\n      result = applyValueAnnotations(result, meta.values, this);\n    }\n\n    if (meta?.referentialEqualities) {\n      result = applyReferentialEqualityAnnotations(\n        result,\n        meta.referentialEqualities\n      );\n    }\n\n    return result;\n  }\n\n  stringify(object: SuperJSONValue): string {\n    return JSON.stringify(this.serialize(object));\n  }\n\n  parse<T = unknown>(string: string): T {\n    return this.deserialize(JSON.parse(string));\n  }\n\n  readonly classRegistry = new ClassRegistry();\n  registerClass(v: Class, options?: RegisterOptions | string) {\n    this.classRegistry.register(v, options);\n  }\n\n  readonly symbolRegistry = new Registry<Symbol>(s => s.description ?? '');\n  registerSymbol(v: Symbol, identifier?: string) {\n    this.symbolRegistry.register(v, identifier);\n  }\n\n  readonly customTransformerRegistry = new CustomTransformerRegistry();\n  registerCustom<I, O extends JSONValue>(\n    transformer: Omit<CustomTransfomer<I, O>, 'name'>,\n    name: string\n  ) {\n    this.customTransformerRegistry.register({\n      name,\n      ...transformer,\n    });\n  }\n\n  readonly allowedErrorProps: string[] = [];\n  allowErrorProps(...props: string[]) {\n    this.allowedErrorProps.push(...props);\n  }\n\n  private static defaultInstance = new SuperJSON();\n  static serialize = SuperJSON.defaultInstance.serialize.bind(\n    SuperJSON.defaultInstance\n  );\n  static deserialize = SuperJSON.defaultInstance.deserialize.bind(\n    SuperJSON.defaultInstance\n  );\n  static stringify = SuperJSON.defaultInstance.stringify.bind(\n    SuperJSON.defaultInstance\n  );\n  static parse = SuperJSON.defaultInstance.parse.bind(\n    SuperJSON.defaultInstance\n  );\n  static registerClass = SuperJSON.defaultInstance.registerClass.bind(\n    SuperJSON.defaultInstance\n  );\n  static registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(\n    SuperJSON.defaultInstance\n  );\n  static registerCustom = SuperJSON.defaultInstance.registerCustom.bind(\n    SuperJSON.defaultInstance\n  );\n  static allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(\n    SuperJSON.defaultInstance\n  );\n}\n\nexport const serialize = SuperJSON.serialize;\nexport const deserialize = SuperJSON.deserialize;\n\nexport const stringify = SuperJSON.stringify;\nexport const parse = SuperJSON.parse;\n\nexport const registerClass = SuperJSON.registerClass;\nexport const registerCustom = SuperJSON.registerCustom;\nexport const registerSymbol = SuperJSON.registerSymbol;\nexport const allowErrorProps = SuperJSON.allowErrorProps;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
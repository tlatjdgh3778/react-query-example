{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjdgh\\\\Desktop\\\\study\\\\react-query\\\\react-query-example\\\\base-infinite-swapi\\\\src\\\\people\\\\InfinitePeople.jsx\",\n  _s = $RefreshSig$();\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Person } from './Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialUrl = 'https://swapi.dev/api/people/';\nconst fetchUrl = async url => {\n  const response = await fetch(url);\n  return response.json();\n};\nexport function InfinitePeople() {\n  _s();\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage\n  } = useInfiniteQuery(['sw-people'], _ref => {\n    let {\n      pageParam = initialUrl\n    } = _ref;\n    return fetchUrl(pageParam);\n  }, {\n    // repsonse에 next라는 프로퍼티를 가지고 있다\n    // 다음 페이지가 없으면 undefined\n    getNextPageParam: lastPage => lastPage.next || undefined\n  });\n\n  // loadMore={fetchNextPage}\n  // hasMore={hasNextPage}\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    loadMore: fetchNextPage,\n    hasMore: hasNextPage,\n    children: data.pages.map(pageData => {\n      return pageData.results.map(person => {\n        return /*#__PURE__*/_jsxDEV(Person, {\n          name: person.name,\n          hairColor: person.hair_color,\n          eyeColor: person.eye_color\n        }, person.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(InfinitePeople, \"hWUugAjIDEJBj+Eam3aFGRVxvjU=\", false, function () {\n  return [useInfiniteQuery];\n});\n_c = InfinitePeople;\nvar _c;\n$RefreshReg$(_c, \"InfinitePeople\");","map":{"version":3,"names":["useInfiniteQuery","InfiniteScroll","Person","initialUrl","fetchUrl","url","response","fetch","json","InfinitePeople","data","fetchNextPage","hasNextPage","pageParam","getNextPageParam","lastPage","next","undefined","pages","map","pageData","results","person","name","hair_color","eye_color"],"sources":["C:/Users/tjdgh/Desktop/study/react-query/react-query-example/base-infinite-swapi/src/people/InfinitePeople.jsx"],"sourcesContent":["import { useInfiniteQuery } from '@tanstack/react-query';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nimport { Person } from './Person';\r\n\r\nconst initialUrl = 'https://swapi.dev/api/people/';\r\nconst fetchUrl = async (url) => {\r\n  const response = await fetch(url);\r\n  return response.json();\r\n};\r\n\r\nexport function InfinitePeople() {\r\n  const { data, fetchNextPage, hasNextPage } = useInfiniteQuery(\r\n    ['sw-people'],\r\n    ({ pageParam = initialUrl }) => fetchUrl(pageParam),\r\n    {\r\n      // repsonse에 next라는 프로퍼티를 가지고 있다\r\n      // 다음 페이지가 없으면 undefined\r\n      getNextPageParam: (lastPage) => lastPage.next || undefined,\r\n    }\r\n  );\r\n\r\n  // loadMore={fetchNextPage}\r\n  // hasMore={hasNextPage}\r\n  return (\r\n    <InfiniteScroll loadMore={fetchNextPage} hasMore={hasNextPage}>\r\n      {data.pages.map((pageData) => {\r\n        return pageData.results.map((person) => {\r\n          return (\r\n            <Person\r\n              key={person.name}\r\n              name={person.name}\r\n              hairColor={person.hair_color}\r\n              eyeColor={person.eye_color}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </InfiniteScroll>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,uBAAuB;AACxD,OAAOC,cAAc,MAAM,yBAAyB;AAEpD,SAASC,MAAM,QAAQ,UAAU;AAAC;AAElC,MAAMC,UAAU,GAAG,+BAA+B;AAClD,MAAMC,QAAQ,GAAG,MAAOC,GAAG,IAAK;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,OAAOC,QAAQ,CAACE,IAAI,EAAE;AACxB,CAAC;AAED,OAAO,SAASC,cAAc,GAAG;EAAA;EAC/B,MAAM;IAAEC,IAAI;IAAEC,aAAa;IAAEC;EAAY,CAAC,GAAGZ,gBAAgB,CAC3D,CAAC,WAAW,CAAC,EACb;IAAA,IAAC;MAAEa,SAAS,GAAGV;IAAW,CAAC;IAAA,OAAKC,QAAQ,CAACS,SAAS,CAAC;EAAA,GACnD;IACE;IACA;IACAC,gBAAgB,EAAGC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,IAAIC;EACnD,CAAC,CACF;;EAED;EACA;EACA,oBACE,QAAC,cAAc;IAAC,QAAQ,EAAEN,aAAc;IAAC,OAAO,EAAEC,WAAY;IAAA,UAC3DF,IAAI,CAACQ,KAAK,CAACC,GAAG,CAAEC,QAAQ,IAAK;MAC5B,OAAOA,QAAQ,CAACC,OAAO,CAACF,GAAG,CAAEG,MAAM,IAAK;QACtC,oBACE,QAAC,MAAM;UAEL,IAAI,EAAEA,MAAM,CAACC,IAAK;UAClB,SAAS,EAAED,MAAM,CAACE,UAAW;UAC7B,QAAQ,EAAEF,MAAM,CAACG;QAAU,GAHtBH,MAAM,CAACC,IAAI;UAAA;UAAA;UAAA;QAAA,QAIhB;MAEN,CAAC,CAAC;IACJ,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACa;AAErB;AAAC,GA7Bed,cAAc;EAAA,QACiBT,gBAAgB;AAAA;AAAA,KAD/CS,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
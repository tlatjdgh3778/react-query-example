{"ast":null,"code":"import { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport * as React from 'react';\nconst defaultTheme = {\n  background: '#0b1521',\n  backgroundAlt: '#132337',\n  foreground: 'white',\n  gray: '#3f4e60',\n  grayAlt: '#222e3e',\n  inputBackgroundColor: '#fff',\n  inputTextColor: '#000',\n  success: '#00ab52',\n  danger: '#ff0085',\n  active: '#006bff',\n  paused: '#8c49eb',\n  warning: '#ffb200'\n};\nconst ThemeContext = /*#__PURE__*/React.createContext(defaultTheme);\nfunction ThemeProvider(_ref) {\n  let {\n    theme,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, _extends({\n    value: theme\n  }, rest));\n}\nfunction useTheme() {\n  return React.useContext(ThemeContext);\n}\nexport { ThemeProvider, defaultTheme, useTheme };","map":{"version":3,"mappings":";;AAGO,MAAMA,YAAY,GAAG;EAC1BC,UAAU,EAAE,SADc;EAE1BC,aAAa,EAAE,SAFW;EAG1BC,UAAU,EAAE,OAHc;EAI1BC,IAAI,EAAE,SAJoB;EAK1BC,OAAO,EAAE,SALiB;EAM1BC,oBAAoB,EAAE,MANI;EAO1BC,cAAc,EAAE,MAPU;EAQ1BC,OAAO,EAAE,SARiB;EAS1BC,MAAM,EAAE,SATkB;EAU1BC,MAAM,EAAE,SAVkB;EAW1BC,MAAM,EAAE,SAXkB;EAY1BC,OAAO,EAAE;AAZiB;AAqB5B,MAAMC,YAAY,gBAAGC,KAAK,CAACC,aAAN,CAAoBf,YAApB,CAArB;AAEO,SAASgB,aAAT,OAA0D;EAAA,IAAnC;IAAEC,KAAF;IAAS,GAAGC;EAAZ,CAAvB;EACL,oBAAOJ,oBAACD,YAAD,CAAcM,QAAd;IAAuBC,KAAK,EAAEH;EAA9B,GAAyCC,IAAzC,CAAP;AACD;AAEM,SAASG,QAAT,GAAoB;EACzB,OAAOP,KAAK,CAACQ,UAAN,CAAiBT,YAAjB,CAAP;AACD","names":["defaultTheme","background","backgroundAlt","foreground","gray","grayAlt","inputBackgroundColor","inputTextColor","success","danger","active","paused","warning","ThemeContext","React","createContext","ThemeProvider","theme","rest","Provider","value","useTheme","useContext"],"sources":["C:\\Users\\tjdgh\\Desktop\\study\\react-query\\react-query-example\\base-infinite-swapi\\node_modules\\@tanstack\\react-query-devtools\\src\\theme.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nexport const defaultTheme = {\n  background: '#0b1521',\n  backgroundAlt: '#132337',\n  foreground: 'white',\n  gray: '#3f4e60',\n  grayAlt: '#222e3e',\n  inputBackgroundColor: '#fff',\n  inputTextColor: '#000',\n  success: '#00ab52',\n  danger: '#ff0085',\n  active: '#006bff',\n  paused: '#8c49eb',\n  warning: '#ffb200',\n} as const\n\nexport type Theme = typeof defaultTheme\ninterface ProviderProps {\n  theme: Theme\n  children?: React.ReactNode\n}\n\nconst ThemeContext = React.createContext(defaultTheme)\n\nexport function ThemeProvider({ theme, ...rest }: ProviderProps) {\n  return <ThemeContext.Provider value={theme} {...rest} />\n}\n\nexport function useTheme() {\n  return React.useContext(ThemeContext)\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
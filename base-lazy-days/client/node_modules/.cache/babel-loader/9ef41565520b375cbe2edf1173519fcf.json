{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { clearStoredUser, setStoredUser } from '../../../user-storage';\nasync function getUser(user, signal) {\n  console.log('getUser');\n  if (!user) return null;\n  const {\n    data\n  } = await axiosInstance.get(`/user/${user.id}`, {\n    headers: getJWTHeader(user),\n    signal\n  });\n  return data.user;\n}\nexport function useUser() {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    data: user\n  } = useQuery(queryKeys.user, _ref => {\n    let {\n      signal\n    } = _ref;\n    return getUser(user, signal);\n  }, {\n    onSuccess: data => {\n      if (!data) {\n        clearStoredUser();\n      } else {\n        setStoredUser(data);\n      }\n    }\n  });\n\n  // meant to be called from useAuth\n  function updateUser(newUser) {\n    console.log(newUser);\n    setStoredUser(newUser);\n    queryClient.setQueryData(queryKeys.user, newUser);\n  }\n\n  // meant to be called from useAuth\n  function clearUser() {\n    clearStoredUser();\n    queryClient.setQueryData(queryKeys.user, null);\n    queryClient.removeQueries([queryKeys.appointments, queryKeys.user]);\n  }\n  return {\n    user,\n    updateUser,\n    clearUser\n  };\n}\n_s(useUser, \"NmeRR1fLBB2wYNsHdaD9UXHQupU=\", false, function () {\n  return [useQueryClient, useQuery];\n});","map":{"version":3,"names":["useQuery","useQueryClient","axiosInstance","getJWTHeader","queryKeys","clearStoredUser","setStoredUser","getUser","user","signal","console","log","data","get","id","headers","useUser","queryClient","onSuccess","updateUser","newUser","setQueryData","clearUser","removeQueries","appointments"],"sources":["C:/Users/tjdgh/Desktop/study/react-query/react-query-example/base-lazy-days/client/src/components/user/hooks/useUser.ts"],"sourcesContent":["import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AxiosResponse } from 'axios';\n\nimport type { User } from '../../../../../shared/types';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport {\n  clearStoredUser,\n  getStoredUser,\n  setStoredUser,\n} from '../../../user-storage';\n\nasync function getUser(\n  user: User | null,\n  signal: AbortSignal,\n): Promise<User | null> {\n  console.log('getUser');\n  if (!user) return null;\n  const { data }: AxiosResponse<{ user: User }> = await axiosInstance.get(\n    `/user/${user.id}`,\n    {\n      headers: getJWTHeader(user),\n      signal,\n    },\n  );\n  return data.user;\n}\n\ninterface UseUser {\n  user: User | null;\n  updateUser: (user: User) => void;\n  clearUser: () => void;\n}\n\nexport function useUser(): UseUser {\n  const queryClient = useQueryClient();\n  const { data: user } = useQuery(\n    queryKeys.user,\n    ({ signal }) => getUser(user, signal),\n    {\n      onSuccess: (data: User | null) => {\n        if (!data) {\n          clearStoredUser();\n        } else {\n          setStoredUser(data);\n        }\n      },\n    },\n  );\n\n  // meant to be called from useAuth\n  function updateUser(newUser: User): void {\n    console.log(newUser);\n    setStoredUser(newUser);\n    queryClient.setQueryData(queryKeys.user, newUser);\n  }\n\n  // meant to be called from useAuth\n  function clearUser() {\n    clearStoredUser();\n    queryClient.setQueryData(queryKeys.user, null);\n    queryClient.removeQueries([queryKeys.appointments, queryKeys.user]);\n  }\n\n  return { user, updateUser, clearUser };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,uBAAuB;AAIhE,SAASC,aAAa,EAAEC,YAAY,QAAQ,wBAAwB;AACpE,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SACEC,eAAe,EAEfC,aAAa,QACR,uBAAuB;AAE9B,eAAeC,OAAO,CACpBC,IAAiB,EACjBC,MAAmB,EACG;EACtBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACtB,IAAI,CAACH,IAAI,EAAE,OAAO,IAAI;EACtB,MAAM;IAAEI;EAAoC,CAAC,GAAG,MAAMV,aAAa,CAACW,GAAG,CACpE,SAAQL,IAAI,CAACM,EAAG,EAAC,EAClB;IACEC,OAAO,EAAEZ,YAAY,CAACK,IAAI,CAAC;IAC3BC;EACF,CAAC,CACF;EACD,OAAOG,IAAI,CAACJ,IAAI;AAClB;AAQA,OAAO,SAASQ,OAAO,GAAY;EAAA;EACjC,MAAMC,WAAW,GAAGhB,cAAc,EAAE;EACpC,MAAM;IAAEW,IAAI,EAAEJ;EAAK,CAAC,GAAGR,QAAQ,CAC7BI,SAAS,CAACI,IAAI,EACd;IAAA,IAAC;MAAEC;IAAO,CAAC;IAAA,OAAKF,OAAO,CAACC,IAAI,EAAEC,MAAM,CAAC;EAAA,GACrC;IACES,SAAS,EAAGN,IAAiB,IAAK;MAChC,IAAI,CAACA,IAAI,EAAE;QACTP,eAAe,EAAE;MACnB,CAAC,MAAM;QACLC,aAAa,CAACM,IAAI,CAAC;MACrB;IACF;EACF,CAAC,CACF;;EAED;EACA,SAASO,UAAU,CAACC,OAAa,EAAQ;IACvCV,OAAO,CAACC,GAAG,CAACS,OAAO,CAAC;IACpBd,aAAa,CAACc,OAAO,CAAC;IACtBH,WAAW,CAACI,YAAY,CAACjB,SAAS,CAACI,IAAI,EAAEY,OAAO,CAAC;EACnD;;EAEA;EACA,SAASE,SAAS,GAAG;IACnBjB,eAAe,EAAE;IACjBY,WAAW,CAACI,YAAY,CAACjB,SAAS,CAACI,IAAI,EAAE,IAAI,CAAC;IAC9CS,WAAW,CAACM,aAAa,CAAC,CAACnB,SAAS,CAACoB,YAAY,EAAEpB,SAAS,CAACI,IAAI,CAAC,CAAC;EACrE;EAEA,OAAO;IAAEA,IAAI;IAAEW,UAAU;IAAEG;EAAU,CAAC;AACxC;AAAC,GA/BeN,OAAO;EAAA,QACDf,cAAc,EACXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { clearStoredUser, getStoredUser, setStoredUser } from '../../../user-storage';\nasync function getUser(user) {\n  console.log('getUser');\n  if (!user) return null;\n  const {\n    data\n  } = await axiosInstance.get(`/user/${user.id}`, {\n    headers: getJWTHeader(user)\n  });\n  return data.user;\n}\nexport function useUser() {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    data: user\n  } = useQuery(queryKeys.user, () => getUser(user), {\n    initialData: getStoredUser(),\n    onSuccess: received => {\n      console.log(received);\n      if (!received) {\n        clearStoredUser();\n      } else {\n        setStoredUser(received);\n      }\n    }\n  });\n\n  // meant to be called from useAuth\n  function updateUser(newUser) {\n    queryClient.setQueryData(queryKeys.user, newUser);\n  }\n\n  // meant to be called from useAuth\n  function clearUser() {\n    queryClient.setQueryData(queryKeys.user, null);\n  }\n  return {\n    user,\n    updateUser,\n    clearUser\n  };\n}\n_s(useUser, \"NmeRR1fLBB2wYNsHdaD9UXHQupU=\", false, function () {\n  return [useQueryClient, useQuery];\n});","map":{"version":3,"names":["useQuery","useQueryClient","axiosInstance","getJWTHeader","queryKeys","clearStoredUser","getStoredUser","setStoredUser","getUser","user","console","log","data","get","id","headers","useUser","queryClient","initialData","onSuccess","received","updateUser","newUser","setQueryData","clearUser"],"sources":["C:/Users/tjdgh/Desktop/study/react-query/react-query-example/base-lazy-days/client/src/components/user/hooks/useUser.ts"],"sourcesContent":["import { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { AxiosResponse } from 'axios';\n\nimport type { User } from '../../../../../shared/types';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport {\n  clearStoredUser,\n  getStoredUser,\n  setStoredUser,\n} from '../../../user-storage';\n\nasync function getUser(user: User | null): Promise<User | null> {\n  console.log('getUser');\n  if (!user) return null;\n  const { data }: AxiosResponse<{ user: User }> = await axiosInstance.get(\n    `/user/${user.id}`,\n    {\n      headers: getJWTHeader(user),\n    },\n  );\n  return data.user;\n}\n\ninterface UseUser {\n  user: User | null;\n  updateUser: (user: User) => void;\n  clearUser: () => void;\n}\n\nexport function useUser(): UseUser {\n  const queryClient = useQueryClient();\n  const { data: user } = useQuery(queryKeys.user, () => getUser(user), {\n    initialData: getStoredUser(),\n    onSuccess: (received: User | null) => {\n      console.log(received);\n      if (!received) {\n        clearStoredUser();\n      } else {\n        setStoredUser(received);\n      }\n    },\n  });\n\n  // meant to be called from useAuth\n  function updateUser(newUser: User): void {\n    queryClient.setQueryData(queryKeys.user, newUser);\n  }\n\n  // meant to be called from useAuth\n  function clearUser() {\n    queryClient.setQueryData(queryKeys.user, null);\n  }\n\n  return { user, updateUser, clearUser };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,uBAAuB;AAIhE,SAASC,aAAa,EAAEC,YAAY,QAAQ,wBAAwB;AACpE,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SACEC,eAAe,EACfC,aAAa,EACbC,aAAa,QACR,uBAAuB;AAE9B,eAAeC,OAAO,CAACC,IAAiB,EAAwB;EAC9DC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACtB,IAAI,CAACF,IAAI,EAAE,OAAO,IAAI;EACtB,MAAM;IAAEG;EAAoC,CAAC,GAAG,MAAMV,aAAa,CAACW,GAAG,CACpE,SAAQJ,IAAI,CAACK,EAAG,EAAC,EAClB;IACEC,OAAO,EAAEZ,YAAY,CAACM,IAAI;EAC5B,CAAC,CACF;EACD,OAAOG,IAAI,CAACH,IAAI;AAClB;AAQA,OAAO,SAASO,OAAO,GAAY;EAAA;EACjC,MAAMC,WAAW,GAAGhB,cAAc,EAAE;EACpC,MAAM;IAAEW,IAAI,EAAEH;EAAK,CAAC,GAAGT,QAAQ,CAACI,SAAS,CAACK,IAAI,EAAE,MAAMD,OAAO,CAACC,IAAI,CAAC,EAAE;IACnES,WAAW,EAAEZ,aAAa,EAAE;IAC5Ba,SAAS,EAAGC,QAAqB,IAAK;MACpCV,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC;MACrB,IAAI,CAACA,QAAQ,EAAE;QACbf,eAAe,EAAE;MACnB,CAAC,MAAM;QACLE,aAAa,CAACa,QAAQ,CAAC;MACzB;IACF;EACF,CAAC,CAAC;;EAEF;EACA,SAASC,UAAU,CAACC,OAAa,EAAQ;IACvCL,WAAW,CAACM,YAAY,CAACnB,SAAS,CAACK,IAAI,EAAEa,OAAO,CAAC;EACnD;;EAEA;EACA,SAASE,SAAS,GAAG;IACnBP,WAAW,CAACM,YAAY,CAACnB,SAAS,CAACK,IAAI,EAAE,IAAI,CAAC;EAChD;EAEA,OAAO;IAAEA,IAAI;IAAEY,UAAU;IAAEG;EAAU,CAAC;AACxC;AAAC,GAzBeR,OAAO;EAAA,QACDf,cAAc,EACXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from '@tanstack/react-query';\nimport jsonpatch from 'fast-json-patch';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser';\nimport { useCustomToast } from 'components/app/hooks/useCustomToast';\n\n// for when we need a server function\nasync function patchUserOnServer(newData, originalData) {\n  if (!newData || !originalData) return null;\n  // create a patch for the difference between newData and originalData\n  const patch = jsonpatch.compare(originalData, newData);\n\n  // send patched data to the server\n  const {\n    data\n  } = await axiosInstance.patch(`/user/${originalData.id}`, {\n    patch\n  }, {\n    headers: getJWTHeader(originalData)\n  });\n  return data.user;\n}\n\n// TODO: update type to UseMutateFunction type\nexport function usePatchUser() {\n  _s();\n  const {\n    user,\n    updateUser\n  } = useUser();\n  const toast = useCustomToast();\n  const {\n    mutate: patchUser\n  } = useMutation(newUserData => patchUserOnServer(newUserData, user), {\n    onSuccess: userData => {\n      updateUser(userData);\n      if (user) {\n        toast({\n          title: 'User updated!',\n          status: 'success'\n        });\n      }\n    }\n  });\n  return patchUser;\n}\n_s(usePatchUser, \"JrxbyD3aQpnwhUE51FII2zhy7og=\", false, function () {\n  return [useUser, useCustomToast, useMutation];\n});","map":{"version":3,"names":["useMutation","jsonpatch","axiosInstance","getJWTHeader","useUser","useCustomToast","patchUserOnServer","newData","originalData","patch","compare","data","id","headers","user","usePatchUser","updateUser","toast","mutate","patchUser","newUserData","onSuccess","userData","title","status"],"sources":["C:/Users/tjdgh/Desktop/study/react-query/react-query-example/base-lazy-days/client/src/components/user/hooks/usePatchUser.ts"],"sourcesContent":["import { useMutation, UseMutateFunction } from '@tanstack/react-query';\nimport jsonpatch from 'fast-json-patch';\n\nimport type { User } from '../../../../../shared/types';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser';\nimport { useCustomToast } from 'components/app/hooks/useCustomToast';\n\n// for when we need a server function\nasync function patchUserOnServer(\n  newData: User | null,\n  originalData: User | null,\n): Promise<User | null> {\n  if (!newData || !originalData) return null;\n  // create a patch for the difference between newData and originalData\n  const patch = jsonpatch.compare(originalData, newData);\n\n  // send patched data to the server\n  const { data } = await axiosInstance.patch(\n    `/user/${originalData.id}`,\n    { patch },\n    {\n      headers: getJWTHeader(originalData),\n    },\n  );\n  return data.user;\n}\n\n// TODO: update type to UseMutateFunction type\nexport function usePatchUser(): (newData: User | null) => void {\n  const { user, updateUser } = useUser();\n  const toast = useCustomToast();\n  const { mutate: patchUser } = useMutation(\n    (newUserData: User) => patchUserOnServer(newUserData, user),\n    {\n      onSuccess: (userData: User | null) => {\n        updateUser(userData);\n        if (user) {\n          toast({\n            title: 'User updated!',\n            status: 'success',\n          });\n        }\n      },\n    },\n  );\n  return patchUser;\n}\n"],"mappings":";AAAA,SAASA,WAAW,QAA2B,uBAAuB;AACtE,OAAOC,SAAS,MAAM,iBAAiB;AAGvC,SAASC,aAAa,EAAEC,YAAY,QAAQ,wBAAwB;AACpE,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,cAAc,QAAQ,qCAAqC;;AAEpE;AACA,eAAeC,iBAAiB,CAC9BC,OAAoB,EACpBC,YAAyB,EACH;EACtB,IAAI,CAACD,OAAO,IAAI,CAACC,YAAY,EAAE,OAAO,IAAI;EAC1C;EACA,MAAMC,KAAK,GAAGR,SAAS,CAACS,OAAO,CAACF,YAAY,EAAED,OAAO,CAAC;;EAEtD;EACA,MAAM;IAAEI;EAAK,CAAC,GAAG,MAAMT,aAAa,CAACO,KAAK,CACvC,SAAQD,YAAY,CAACI,EAAG,EAAC,EAC1B;IAAEH;EAAM,CAAC,EACT;IACEI,OAAO,EAAEV,YAAY,CAACK,YAAY;EACpC,CAAC,CACF;EACD,OAAOG,IAAI,CAACG,IAAI;AAClB;;AAEA;AACA,OAAO,SAASC,YAAY,GAAmC;EAAA;EAC7D,MAAM;IAAED,IAAI;IAAEE;EAAW,CAAC,GAAGZ,OAAO,EAAE;EACtC,MAAMa,KAAK,GAAGZ,cAAc,EAAE;EAC9B,MAAM;IAAEa,MAAM,EAAEC;EAAU,CAAC,GAAGnB,WAAW,CACtCoB,WAAiB,IAAKd,iBAAiB,CAACc,WAAW,EAAEN,IAAI,CAAC,EAC3D;IACEO,SAAS,EAAGC,QAAqB,IAAK;MACpCN,UAAU,CAACM,QAAQ,CAAC;MACpB,IAAIR,IAAI,EAAE;QACRG,KAAK,CAAC;UACJM,KAAK,EAAE,eAAe;UACtBC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CACF;EACD,OAAOL,SAAS;AAClB;AAAC,GAlBeJ,YAAY;EAAA,QACGX,OAAO,EACtBC,cAAc,EACEL,WAAW;AAAA"},"metadata":{},"sourceType":"module"}
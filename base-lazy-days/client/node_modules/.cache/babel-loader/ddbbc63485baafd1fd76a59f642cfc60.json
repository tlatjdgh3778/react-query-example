{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when server call is needed\nasync function removeAppointmentUser(appointment) {\n  const patchData = [{\n    op: 'remove',\n    path: '/userId'\n  }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment() {\n  _s();\n  const toast = useCustomToast();\n  const queryClient = useQueryClient();\n  const {\n    mutate\n  } = useMutation(appointment => removeAppointmentUser(appointment), {\n    onSuccess: () => {\n      queryClient.invalidateQueries();\n      toast({\n        title: '예약이 취소되었습니다.',\n        status: 'success'\n      });\n    }\n  });\n  return mutate;\n}\n_s(useCancelAppointment, \"5+/i7P7x/0kCNYxxAhRcSfpmsIM=\", false, function () {\n  return [useCustomToast, useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","axiosInstance","useCustomToast","removeAppointmentUser","appointment","patchData","op","path","patch","id","data","useCancelAppointment","toast","queryClient","mutate","onSuccess","invalidateQueries","title","status"],"sources":["C:/Users/tjdgh/Desktop/study/react-query/react-query-example/base-lazy-days/client/src/components/appointments/hooks/useCancelAppointment.ts"],"sourcesContent":["import {\n  UseMutateFunction,\n  useMutation,\n  useQueryClient,\n} from '@tanstack/react-query';\n\nimport { Appointment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\n// for when server call is needed\nasync function removeAppointmentUser(appointment: Appointment): Promise<void> {\n  const patchData = [{ op: 'remove', path: '/userId' }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData,\n  });\n}\n\n// TODO: update return type\nexport function useCancelAppointment(): UseMutateFunction<\n  void,\n  unknown,\n  Appointment,\n  unknown\n> {\n  const toast = useCustomToast();\n\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    (appointment: Appointment) => removeAppointmentUser(appointment),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries();\n        toast({\n          title: '예약이 취소되었습니다.',\n          status: 'success',\n        });\n      },\n    },\n  );\n\n  return mutate;\n}\n"],"mappings":";AAAA,SAEEA,WAAW,EACXC,cAAc,QACT,uBAAuB;AAG9B,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,SAASC,cAAc,QAAQ,gCAAgC;;AAE/D;AACA,eAAeC,qBAAqB,CAACC,WAAwB,EAAiB;EAC5E,MAAMC,SAAS,GAAG,CAAC;IAAEC,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EACrD,MAAMN,aAAa,CAACO,KAAK,CAAE,gBAAeJ,WAAW,CAACK,EAAG,EAAC,EAAE;IAC1DC,IAAI,EAAEL;EACR,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,oBAAoB,GAKlC;EAAA;EACA,MAAMC,KAAK,GAAGV,cAAc,EAAE;EAE9B,MAAMW,WAAW,GAAGb,cAAc,EAAE;EAEpC,MAAM;IAAEc;EAAO,CAAC,GAAGf,WAAW,CAC3BK,WAAwB,IAAKD,qBAAqB,CAACC,WAAW,CAAC,EAChE;IACEW,SAAS,EAAE,MAAM;MACfF,WAAW,CAACG,iBAAiB,EAAE;MAC/BJ,KAAK,CAAC;QACJK,KAAK,EAAE,cAAc;QACrBC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;EACF,CAAC,CACF;EAED,OAAOJ,MAAM;AACf;AAAC,GAxBeH,oBAAoB;EAAA,QAMpBT,cAAc,EAERF,cAAc,EAEfD,WAAW;AAAA"},"metadata":{},"sourceType":"module"}
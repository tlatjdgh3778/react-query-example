{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { useCallback, useState } from 'react';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\n\n// for when we need a query function for useQuery\nasync function getStaff() {\n  const {\n    data\n  } = await axiosInstance.get('/staff');\n  return data;\n}\nexport function useStaff() {\n  _s();\n  const [filter, setFilter] = useState('all');\n  const fallback = [];\n  console.log(filter);\n  const filterFn = useCallback(data => filterByTreatment(data, filter), [filter]);\n  const {\n    data: staff = fallback\n  } = useQuery(queryKeys.staff, getStaff, {\n    select: filter === 'all' ? undefined : filterFn\n  });\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n_s(useStaff, \"ICyoJpRlP/TM+U9DR3SYQhMjeno=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","useCallback","useState","axiosInstance","queryKeys","filterByTreatment","getStaff","data","get","useStaff","filter","setFilter","fallback","console","log","filterFn","staff","select","undefined"],"sources":["C:/Users/tjdgh/Desktop/study/react-query/react-query-example/base-lazy-days/client/src/components/staff/hooks/useStaff.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\nimport type { Staff } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\n\n// for when we need a query function for useQuery\nasync function getStaff(): Promise<Staff[]> {\n  const { data } = await axiosInstance.get('/staff');\n  return data;\n}\n\ninterface UseStaff {\n  staff: Staff[];\n  filter: string;\n  setFilter: Dispatch<SetStateAction<string>>;\n}\n\nexport function useStaff(): UseStaff {\n  const [filter, setFilter] = useState('all');\n  const fallback = [];\n\n  console.log(filter);\n  const filterFn = useCallback(\n    (data) => filterByTreatment(data, filter),\n    [filter],\n  );\n  const { data: staff = fallback } = useQuery(queryKeys.staff, getStaff, {\n    select: filter === 'all' ? undefined : filterFn,\n  });\n\n  return { staff, filter, setFilter };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAAmCC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAGvE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,iBAAiB,QAAQ,UAAU;;AAE5C;AACA,eAAeC,QAAQ,GAAqB;EAC1C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,aAAa,CAACK,GAAG,CAAC,QAAQ,CAAC;EAClD,OAAOD,IAAI;AACb;AAQA,OAAO,SAASE,QAAQ,GAAa;EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMU,QAAQ,GAAG,EAAE;EAEnBC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACnB,MAAMK,QAAQ,GAAGd,WAAW,CACzBM,IAAI,IAAKF,iBAAiB,CAACE,IAAI,EAAEG,MAAM,CAAC,EACzC,CAACA,MAAM,CAAC,CACT;EACD,MAAM;IAAEH,IAAI,EAAES,KAAK,GAAGJ;EAAS,CAAC,GAAGZ,QAAQ,CAACI,SAAS,CAACY,KAAK,EAAEV,QAAQ,EAAE;IACrEW,MAAM,EAAEP,MAAM,KAAK,KAAK,GAAGQ,SAAS,GAAGH;EACzC,CAAC,CAAC;EAEF,OAAO;IAAEC,KAAK;IAAEN,MAAM;IAAEC;EAAU,CAAC;AACrC;AAAC,GAdeF,QAAQ;EAAA,QASaT,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}